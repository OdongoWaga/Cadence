{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.dfbad518595e7fc6e612.hot-update.js","sources":["webpack:///./components/Stripe.js"],"sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { Mutation } from 'react-apollo';\r\nimport Router from 'next/router';\r\nimport NProgress from 'nprogress';\r\nimport PropTypes from 'prop-types';\r\nimport gql from 'graphql-tag';\r\nimport calcTotalPrice from '../lib/calcTotalPrice';\r\nimport Error from './ErrorMessage';\r\nimport User, { CURRENT_USER_QUERY } from './User';\r\n\r\nconst CREATE_ORDER_MUTATION=  gql `\r\nmutation createOrder($token: String!){\r\n  createOrder(token: $token) {\r\n    id\r\n    charge\r\n    total\r\n    items {\r\n      id\r\n      title\r\n    }\r\n  }\r\n}`\r\n\r\nfunction totalItems(cart) {\r\n    return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\r\n  }\r\n\r\n\r\nclass Stripe extends React.Component {\r\n    onToken = async (res, createOrder) => {\r\n        console.log('On Token Called!');\r\n        console.log(res.id);\r\n\r\n        //Manually call the mutation once we have the stripe token\r\n        const order = await createOrder({\r\n          variables:{\r\n            token: res.id,\r\n          },\r\n        }).catch(err => {\r\n          alert(err.message);\r\n        });\r\n        console.log(order);\r\n    };\r\nrender () {\r\n    return (\r\n        <User>\r\n          {({ data: { me } }) => (\r\n            <Mutation mutation={CREATE_ORDER_MUTATION}\r\n            refetchQueries={[{query: CURRENT_USER_QUERY}]}>            \r\n         {(createOrder)=> (\r\n            <StripeCheckout\r\n              amount={calcTotalPrice(me.cart)}\r\n              name=\"cadence\"\r\n              description={`Order of ${totalItems(me.cart)} items!`}\r\n              image={me.cart.length&&me.cart[0].item && me.cart[0].item.image}\r\n              stripeKey=\"pk_test_TL3wgcfvy1IcOZWbdoaIEZU2\"\r\n              currency=\"USD\"\r\n              email={me.email}\r\n              token={res => this.onToken(res, createOrder)}\r\n            >\r\n              {this.props.children}\r\n            </StripeCheckout>\r\n            )}\r\n            </Mutation>\r\n          )}\r\n        </User>\r\n      );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Stripe;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAYA;AACA;AAAA;AAAA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AADA;AADA;AAKA;AACA;AACA;AAZA;AAKA;AAOA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAqBA;;;;AAvCA;AACA;AA4CA;;;;A","sourceRoot":""}